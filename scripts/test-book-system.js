// Test script for Book Management System
const admin = require('firebase-admin');

// Initialize Firebase Admin (you'll need to set up your service account)
// admin.initializeApp({
//   credential: admin.credential.applicationDefault(),
//   projectId: 'your-project-id'
// });

const db = admin.firestore();

async function testBookSystem() {
  console.log('üîç Testing Book Management System...\n');

  try {
    // Test 1: Check books collection
    console.log('üìö Testing Books Collection...');
    const booksSnapshot = await db.collection('books').limit(5).get();
    console.log(`‚úÖ Found ${booksSnapshot.size} books in collection`);
    
    // Test 2: Check students collection
    console.log('\nüë• Testing Students Collection...');
    const studentsSnapshot = await db.collection('students').limit(5).get();
    console.log(`‚úÖ Found ${studentsSnapshot.size} students in collection`);
    
    // Test 3: Check transactions collection
    console.log('\nüìã Testing Book Transactions Collection...');
    const transactionsSnapshot = await db.collection('bookTransactions').limit(5).get();
    console.log(`‚úÖ Found ${transactionsSnapshot.size} transactions in collection`);
    
    // Test 4: Sample book data structure
    console.log('\nüìñ Sample Book Data Structure:');
    if (!booksSnapshot.empty) {
      const sampleBook = booksSnapshot.docs[0].data();
      console.log('‚úÖ Sample Book:', JSON.stringify(sampleBook, null, 2));
    } else {
      console.log('‚ÑπÔ∏è  No books found. Here\'s the expected structure:');
      console.log(`
      {
        "title": "‡§ó‡•Ä‡§§‡§æ ‡§∞‡§π‡§∏‡•ç‡§Ø",
        "author": "‡§¨‡§æ‡§≤ ‡§ó‡§Ç‡§ó‡§æ‡§ß‡§∞ ‡§§‡§ø‡§≤‡§ï",
        "isbn": "978-81-7055-000-1",
        "category": "‡§ß‡§æ‡§∞‡•ç‡§Æ‡§ø‡§ï ‡§∏‡§æ‡§π‡§ø‡§§‡•ç‡§Ø",
        "language": "hindi",
        "totalCopies": 5,
        "availableCopies": 3,
        "issuedCopies": 2,
        "publisher": "‡§™‡•ç‡§∞‡§ï‡§æ‡§∂‡§ï ‡§®‡§æ‡§Æ",
        "publicationYear": 2020,
        "price": 150,
        "location": "A-1, ‡§∂‡•á‡§≤‡•ç‡§´-2",
        "description": "‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§ï‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£",
        "addedDate": "2023-01-15T00:00:00.000Z",
        "createdAt": "2023-01-15T00:00:00.000Z",
        "updatedAt": "2023-01-15T00:00:00.000Z",
        "createdBy": "admin@arogyabmr.org",
        "updatedBy": "admin@arogyabmr.org"
      }`);
    }
    
    // Test 5: Sample transaction data structure
    console.log('\nüìã Sample Transaction Data Structure:');
    if (!transactionsSnapshot.empty) {
      const sampleTransaction = transactionsSnapshot.docs[0].data();
      console.log('‚úÖ Sample Transaction:', JSON.stringify(sampleTransaction, null, 2));
    } else {
      console.log('‚ÑπÔ∏è  No transactions found. Here\'s the expected structure:');
      console.log(`
      {
        "bookId": "book_id_here",
        "studentId": "student_id_here",
        "studentName": "‡§∞‡§æ‡§π‡•Å‡§≤ ‡§∂‡§∞‡•ç‡§Æ‡§æ",
        "bookTitle": "‡§ó‡•Ä‡§§‡§æ ‡§∞‡§π‡§∏‡•ç‡§Ø",
        "bookAuthor": "‡§¨‡§æ‡§≤ ‡§ó‡§Ç‡§ó‡§æ‡§ß‡§∞ ‡§§‡§ø‡§≤‡§ï",
        "issueDate": "2023-01-15T00:00:00.000Z",
        "dueDate": "2023-01-22T00:00:00.000Z",
        "returnDate": null,
        "status": "issued",
        "fine": 0,
        "fineReason": null,
        "remarks": null,
        "issuedBy": "admin@arogyabmr.org",
        "returnedBy": null,
        "createdAt": "2023-01-15T00:00:00.000Z",
        "updatedAt": "2023-01-15T00:00:00.000Z"
      }`);
    }
    
    console.log('\n‚úÖ Book Management System Test Complete!');
    console.log('\nüìä System Features Available:');
    console.log('‚úÖ Add new books to collection');
    console.log('‚úÖ Issue books to students');
    console.log('‚úÖ Return books with fine calculation');
    console.log('‚úÖ Track all transactions');
    console.log('‚úÖ Automatic overdue detection');
    console.log('‚úÖ Student book limit management');
    console.log('‚úÖ Real-time availability updates');
    
  } catch (error) {
    console.error('‚ùå Error testing book system:', error);
  }
}

// Sample data for testing
const sampleBooks = [
  {
    title: "‡§ó‡•Ä‡§§‡§æ ‡§∞‡§π‡§∏‡•ç‡§Ø",
    author: "‡§¨‡§æ‡§≤ ‡§ó‡§Ç‡§ó‡§æ‡§ß‡§∞ ‡§§‡§ø‡§≤‡§ï",
    isbn: "978-81-7055-000-1",
    category: "‡§ß‡§æ‡§∞‡•ç‡§Æ‡§ø‡§ï ‡§∏‡§æ‡§π‡§ø‡§§‡•ç‡§Ø",
    language: "hindi",
    totalCopies: 5,
    availableCopies: 5,
    issuedCopies: 0,
    publisher: "‡§ï‡•á‡§∏‡§∞‡•Ä ‡§™‡•ç‡§∞‡§ï‡§æ‡§∂‡§®",
    publicationYear: 1915,
    price: 150,
    location: "A-1, ‡§∂‡•á‡§≤‡•ç‡§´-1",
    description: "‡§∂‡•ç‡§∞‡•Ä‡§Æ‡§¶‡•ç‡§≠‡§ó‡§µ‡§¶‡•ç‡§ó‡•Ä‡§§‡§æ ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§¶‡§∞‡•ç‡§∂‡§®‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§ï‡•Ä ‡§Æ‡§π‡§æ‡§® ‡§ï‡•É‡§§‡§ø"
  },
  {
    title: "‡§π‡§∞‡•Ä ‡§ò‡§æ‡§∏ ‡§ï‡•á ‡§Ø‡•á ‡§¶‡§ø‡§®",
    author: "‡§´‡§£‡•Ä‡§∂‡•ç‡§µ‡§∞‡§®‡§æ‡§• ‡§∞‡•á‡§£‡•Å",
    isbn: "978-81-7178-000-2",
    category: "‡§â‡§™‡§®‡•ç‡§Ø‡§æ‡§∏",
    language: "hindi",
    totalCopies: 3,
    availableCopies: 3,
    issuedCopies: 0,
    publisher: "‡§∞‡§æ‡§ú‡§ï‡§Æ‡§≤ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∂‡§®",
    publicationYear: 1954,
    price: 200,
    location: "B-2, ‡§∂‡•á‡§≤‡•ç‡§´-3",
    description: "‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§∏‡§æ‡§π‡§ø‡§§‡•ç‡§Ø ‡§ï‡§æ ‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§â‡§™‡§®‡•ç‡§Ø‡§æ‡§∏"
  },
  {
    title: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§ï‡•Ä ‡§ï‡§π‡§æ‡§®‡§ø‡§Ø‡§æ‡§Å",
    author: "‡§ú‡§Ø‡§Ç‡§§ ‡§®‡§æ‡§∞‡•ç‡§≤‡•Ä‡§ï‡§∞",
    isbn: "978-81-7055-000-3",
    category: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®",
    language: "hindi",
    totalCopies: 4,
    availableCopies: 4,
    issuedCopies: 0,
    publisher: "‡§®‡•á‡§∂‡§®‡§≤ ‡§¨‡•Å‡§ï ‡§ü‡•ç‡§∞‡§∏‡•ç‡§ü",
    publicationYear: 2010,
    price: 120,
    location: "C-1, ‡§∂‡•á‡§≤‡•ç‡§´-2",
    description: "‡§¨‡§ö‡•ç‡§ö‡•ã‡§Ç ‡§î‡§∞ ‡§Ø‡•Å‡§µ‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∞‡•ã‡§ö‡§ï ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§ï‡§π‡§æ‡§®‡§ø‡§Ø‡§æ‡§Å"
  }
];

async function addSampleBooks() {
  console.log('üìö Adding sample books to collection...\n');
  
  try {
    for (const book of sampleBooks) {
      const docRef = await db.collection('books').add({
        ...book,
        addedDate: admin.firestore.FieldValue.serverTimestamp(),
        createdAt: admin.firestore.FieldValue.serverTimestamp(),
        updatedAt: admin.firestore.FieldValue.serverTimestamp(),
        createdBy: 'admin@arogyabmr.org',
        updatedBy: 'admin@arogyabmr.org'
      });
      
      console.log(`‚úÖ Added book: ${book.title} (ID: ${docRef.id})`);
    }
    
    console.log('\n‚úÖ All sample books added successfully!');
  } catch (error) {
    console.error('‚ùå Error adding sample books:', error);
  }
}

// Uncomment to run tests
// testBookSystem();

// Uncomment to add sample books
// addSampleBooks();

module.exports = {
  testBookSystem,
  addSampleBooks,
  sampleBooks
};
