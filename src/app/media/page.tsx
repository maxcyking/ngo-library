"use client";

import React, { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Calendar, Image as ImageIcon, Video, Eye, X } from "lucide-react";
import { collection, query, where, orderBy, getDocs } from 'firebase/firestore';
import { db } from '@/lib/firebase';

interface MediaItem {
  id: string;
  title: string;
  description: string;
  category: string;
  imageUrl: string;
  thumbnailUrl?: string;
  date: string;
  tags: string[];
  isActive: boolean;
  createdAt: Date | { seconds: number; nanoseconds: number };
}

// Dummy data for fallback
const dummyMediaItems = [
  {
    id: "1",
    title: "‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§≠‡§µ‡§® ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§æ‡§∞‡•ç‡§Ø",
    type: "image",
    category: "‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§æ‡§∞‡•ç‡§Ø",
    date: "‡§ú‡•Ç‡§® 2024",
    description: "35 ‡§≤‡§æ‡§ñ ‡§∞‡•Å‡§™‡§è ‡§ï‡•Ä ‡§≤‡§æ‡§ó‡§§ ‡§∏‡•á ‡§®‡§è ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§≠‡§µ‡§® ‡§ï‡§æ ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§æ‡§∞‡•ç‡§Ø",
    thumbnail: "/api/placeholder/400/300",
    images: [
      "/api/placeholder/800/600",
      "/api/placeholder/800/600",
      "/api/placeholder/800/600"
    ]
  },
  {
    id: "2",
    title: "‡§Æ‡§æ‡§® ‡§Æ‡§ø‡§≤‡§æ‡§™ ‡§∏‡§Æ‡§æ‡§∞‡•ã‡§π 2022",
    type: "image",
    category: "‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ",
    date: "‡§Ö‡§ó‡§∏‡•ç‡§§ 2022",
    description: "‡§¶‡•ç‡§µ‡§ø‡§§‡•Ä‡§Ø ‡§µ‡§æ‡§∞‡•ç‡§∑‡§ø‡§ï‡•ã‡§§‡•ç‡§∏‡§µ ‡§™‡§∞ ‡§∏‡§æ‡§Æ‡§æ‡§ú‡§ø‡§ï ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡§æ ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§® ‡§∏‡§Æ‡§æ‡§∞‡•ã‡§π",
    thumbnail: "/api/placeholder/400/300",
    images: [
      "/api/placeholder/800/600",
      "/api/placeholder/800/600",
      "/api/placeholder/800/600",
      "/api/placeholder/800/600"
    ]
  },
  {
    id: "3",
    title: "‡§∞‡§ï‡•ç‡§§‡§¶‡§æ‡§® ‡§∂‡§ø‡§µ‡§ø‡§∞ ‡§ú‡•Å‡§≤‡§æ‡§à 2022",
    type: "image",
    category: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ",
    date: "‡§ú‡•Å‡§≤‡§æ‡§à 2022",
    description: "50+ ‡§∞‡§ï‡•ç‡§§‡§¶‡§æ‡§§‡§æ‡§ì‡§Ç ‡§®‡•á ‡§∞‡§ï‡•ç‡§§‡§¶‡§æ‡§® ‡§ï‡§∞ ‡§ú‡•Ä‡§µ‡§® ‡§¶‡§æ‡§® ‡§ï‡§æ ‡§™‡•Å‡§£‡•ç‡§Ø ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§ï‡§ø‡§Ø‡§æ",
    thumbnail: "/api/placeholder/400/300",
    images: [
      "/api/placeholder/800/600",
      "/api/placeholder/800/600"
    ]
  },
  {
    id: "4",
    title: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§Ç‡§ö ‡§∂‡§ø‡§µ‡§ø‡§∞",
    type: "image",
    category: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ",
    date: "‡§Æ‡§à 2022",
    description: "‡§®‡§ø‡§É‡§∂‡•Å‡§≤‡•ç‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§Ç‡§ö ‡§∂‡§ø‡§µ‡§ø‡§∞ ‡§Æ‡•á‡§Ç 200+ ‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•Ä ‡§ú‡§æ‡§Ç‡§ö",
    thumbnail: "/api/placeholder/400/300",
    images: [
      "/api/placeholder/800/600",
      "/api/placeholder/800/600",
      "/api/placeholder/800/600"
    ]
  },
  {
    id: "5",
    title: "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§ú‡§æ‡§ó‡§∞‡•Ç‡§ï‡§§‡§æ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ",
    type: "image",
    category: "‡§∏‡§æ‡§Æ‡§æ‡§ú‡§ø‡§ï ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ",
    date: "‡§Æ‡§æ‡§∞‡•ç‡§ö 2022",
    description: "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§∏‡§∂‡§ï‡•ç‡§§‡§ø‡§ï‡§∞‡§£ ‡§î‡§∞ ‡§ú‡§æ‡§ó‡§∞‡•Ç‡§ï‡§§‡§æ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§Ü‡§Ø‡•ã‡§ú‡§®",
    thumbnail: "/api/placeholder/400/300",
    images: [
      "/api/placeholder/800/600",
      "/api/placeholder/800/600"
    ]
  },
  {
    id: "6",
    title: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§µ‡§ø‡§§‡§∞‡§£",
    type: "image",
    category: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ",
    date: "‡§´‡§∞‡§µ‡§∞‡•Ä 2022",
    description: "‡§ó‡§∞‡•Ä‡§¨ ‡§¨‡§ö‡•ç‡§ö‡•ã‡§Ç ‡§ï‡•ã ‡§®‡§ø‡§É‡§∂‡•Å‡§≤‡•ç‡§ï ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§ï‡§æ ‡§µ‡§ø‡§§‡§∞‡§£",
    thumbnail: "/api/placeholder/400/300",
    images: [
      "/api/placeholder/800/600",
      "/api/placeholder/800/600",
      "/api/placeholder/800/600"
    ]
  }
];

const dummyNewsItems = [
  {
    id: "1",
    title: "‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§≠‡§µ‡§® ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§ú‡•Ç‡§® 2024 ‡§§‡§ï ‡§™‡•Ç‡§∞‡•ç‡§£",
    date: "15 ‡§Æ‡§à 2024",
    category: "‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§Ö‡§™‡§°‡•á‡§ü",
    excerpt: "35 ‡§≤‡§æ‡§ñ ‡§∞‡•Å‡§™‡§è ‡§ï‡•Ä ‡§≤‡§æ‡§ó‡§§ ‡§∏‡•á ‡§¨‡§® ‡§∞‡§π‡•á ‡§®‡§è ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§≠‡§µ‡§® ‡§ï‡§æ ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§§‡•á‡§ú‡•Ä ‡§∏‡•á ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§™‡§∞ ‡§π‡•à‡•§",
    image: "/api/placeholder/400/250"
  },
  {
    id: "2",
    title: "‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§∞‡§ï‡•ç‡§§‡§¶‡§æ‡§® ‡§∂‡§ø‡§µ‡§ø‡§∞ ‡§ï‡§æ ‡§∏‡§´‡§≤ ‡§Ü‡§Ø‡•ã‡§ú‡§®",
    date: "10 ‡§Æ‡§à 2024",
    category: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ",
    excerpt: "‡§á‡§∏ ‡§Æ‡§π‡•Ä‡§®‡•á ‡§ï‡•á ‡§∞‡§ï‡•ç‡§§‡§¶‡§æ‡§® ‡§∂‡§ø‡§µ‡§ø‡§∞ ‡§Æ‡•á‡§Ç 45 ‡§∞‡§ï‡•ç‡§§‡§¶‡§æ‡§§‡§æ‡§ì‡§Ç ‡§®‡•á ‡§≠‡§æ‡§ó ‡§≤‡§ø‡§Ø‡§æ ‡§î‡§∞ ‡§∞‡§ï‡•ç‡§§‡§¶‡§æ‡§® ‡§ï‡§ø‡§Ø‡§æ‡•§",
    image: "/api/placeholder/400/250"
  },
  {
    id: "3",
    title: "‡§®‡§ø‡§É‡§∂‡•Å‡§≤‡•ç‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§Ç‡§ö ‡§∂‡§ø‡§µ‡§ø‡§∞ ‡§ï‡§æ ‡§Ü‡§Ø‡•ã‡§ú‡§®",
    date: "5 ‡§Æ‡§à 2024",
    category: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ",
    excerpt: "‡§ó‡§æ‡§Ç‡§µ ‡§Æ‡•á‡§Ç ‡§Ü‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§Ç‡§ö ‡§∂‡§ø‡§µ‡§ø‡§∞ ‡§Æ‡•á‡§Ç 150+ ‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•Ä ‡§®‡§ø‡§É‡§∂‡•Å‡§≤‡•ç‡§ï ‡§ú‡§æ‡§Ç‡§ö ‡§ï‡•Ä ‡§ó‡§à‡•§",
    image: "/api/placeholder/400/250"
  }
];

const categories = [
  "‡§∏‡§≠‡•Ä",
  "‡§ó‡•à‡§≤‡§∞‡•Ä (Gallery)",
  "‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ (News)"
];

export default function MediaPage() {
  const [activeTab, setActiveTab] = useState("gallery");
  const [selectedCategory, setSelectedCategory] = useState("‡§∏‡§≠‡•Ä");
  const [selectedImage, setSelectedImage] = useState<string | null>(null);
  const [mediaItems, setMediaItems] = useState<MediaItem[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchMedia();
  }, []);

  const fetchMedia = async () => {
    try {
      setLoading(true);
      const q = query(
        collection(db, 'media'),
        where('isActive', '==', true),
        where('category', '==', '‡§ó‡•à‡§≤‡§∞‡•Ä (Gallery)'), // Only fetch gallery images
        orderBy('createdAt', 'desc')
      );
      
      const querySnapshot = await getDocs(q);
      const items = querySnapshot.docs.map(doc => ({
        id: doc.id,
        ...doc.data()
      })) as MediaItem[];
      
      setMediaItems(items);
    } catch (error) {
      console.error('Error fetching media:', error);
      setMediaItems(dummyMediaItems as any);
    } finally {
      setLoading(false);
    }
  };

  const filteredMedia = mediaItems; // No category filter needed, only gallery images

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-purple-600 to-blue-600 text-white py-16">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto text-center">
            <h1 className="text-4xl md:text-5xl font-bold mb-6">
              üì∏ ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§ó‡•à‡§≤‡§∞‡•Ä
            </h1>
            <p className="text-xl mb-8">
              ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ, ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡§æ‡§Ç ‡§î‡§∞ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§§‡§∏‡•ç‡§µ‡•Ä‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞
            </p>
          </div>
        </div>
      </section>

      {/* Tab Navigation */}
      <section className="py-8 bg-white shadow-sm">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto">
            <div className="flex flex-wrap justify-center gap-4">
              <Button
                variant={activeTab === "gallery" ? "default" : "outline"}
                onClick={() => setActiveTab("gallery")}
                className="flex items-center"
              >
                <ImageIcon className="w-4 h-4 mr-2" aria-hidden="true" />
                ‡§´‡•ã‡§ü‡•ã ‡§ó‡•à‡§≤‡§∞‡•Ä
              </Button>
              <Button
                variant={activeTab === "news" ? "default" : "outline"}
                onClick={() => setActiveTab("news")}
                className="flex items-center"
              >
                <Calendar className="w-4 h-4 mr-2" aria-hidden="true" />
                ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞
              </Button>
              <Button
                variant={activeTab === "videos" ? "default" : "outline"}
                onClick={() => setActiveTab("videos")}
                className="flex items-center"
              >
                <Video className="w-4 h-4 mr-2" aria-hidden="true" />
                ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Photo Gallery */}
      {activeTab === "gallery" && (
        <section className="py-12 bg-white">
          <div className="container mx-auto px-4">
            <div className="max-w-7xl mx-auto">
              {/* Loading State */}
              {loading && (
                <div className="text-center py-12">
                  <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto mb-4"></div>
                  <p className="text-gray-600">‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...</p>
                </div>
              )}

              {/* Instagram Style Gallery Grid */}
              {!loading && filteredMedia.length > 0 && (
                <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-1 md:gap-2">
                  {filteredMedia.map((item) => (
                    <div
                      key={item.id}
                      className="relative aspect-square bg-gray-100 overflow-hidden group cursor-pointer"
                      onClick={() => setSelectedImage(item.imageUrl)}
                    >
                      <img
                        src={item.imageUrl || item.thumbnailUrl}
                        alt={item.title || 'Gallery image'}
                        className="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
                      />
                      {/* Hover Overlay */}
                      <div className="absolute inset-0 bg-opacity-0 group-hover:bg-opacity-40 transition-all duration-300 flex items-center justify-center">
                        <div className="text-white opacity-0 group-hover:opacity-100 transition-opacity duration-300 text-center p-4">
                          <Eye className="w-8 h-8 mx-auto mb-2" />
                          {item.description && (
                            <p className="text-sm font-medium line-clamp-2">{item.description}</p>
                          )}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              )}

              {!loading && filteredMedia.length === 0 && (
                <div className="text-center py-20">
                  <div className="text-6xl mb-4">üì∏</div>
                  <h3 className="text-2xl font-bold text-gray-800 mb-2">
                    ‡§ó‡•à‡§≤‡§∞‡•Ä ‡§ñ‡§æ‡§≤‡•Ä ‡§π‡•à
                  </h3>
                  <p className="text-gray-600">
                    ‡§Ö‡§≠‡•Ä ‡§§‡§ï ‡§ï‡•ã‡§à ‡§§‡§∏‡•ç‡§µ‡•Ä‡§∞ ‡§Ö‡§™‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§ï‡•Ä ‡§ó‡§à ‡§π‡•à
                  </p>
                </div>
              )}
            </div>
          </div>
        </section>
      )}

      {/* News Section */}
      {activeTab === "news" && (
        <section className="py-12">
          <div className="container mx-auto px-4">
            <div className="max-w-4xl mx-auto">
              <h2 className="text-3xl font-bold text-center text-gray-800 mb-12">
                üì∞ ‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞
              </h2>

              <div className="space-y-8">
                {dummyNewsItems.map((news) => (
                  <Card key={news.id} className="overflow-hidden hover:shadow-lg transition-shadow duration-300">
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                      <div className="md:col-span-1">
                        <img
                          src={news.image}
                          alt={news.title}
                          className="w-full h-48 md:h-full object-cover"
                        />
                      </div>
                      <div className="md:col-span-2 p-6">
                        <div className="flex items-center gap-4 mb-3">
                          <Badge variant="secondary" className="text-xs">
                            {news.category}
                          </Badge>
                          <span className="text-sm text-gray-500 flex items-center">
                            <Calendar className="w-4 h-4 mr-1" />
                            {news.date}
                          </span>
                        </div>
                        <h3 className="text-xl font-semibold text-gray-800 mb-3">
                          {news.title}
                        </h3>
                        <p className="text-gray-600 mb-4">
                          {news.excerpt}
                        </p>
                        <Button variant="outline" size="sm">
                          ‡§™‡•Ç‡§∞‡§æ ‡§™‡§¢‡§º‡•á‡§Ç
                        </Button>
                      </div>
                    </div>
                  </Card>
                ))}
              </div>
            </div>
          </div>
        </section>
      )}

      {/* Videos Section */}
      {activeTab === "videos" && (
        <section className="py-12">
          <div className="container mx-auto px-4">
            <div className="max-w-4xl mx-auto text-center">
              <h2 className="text-3xl font-bold text-gray-800 mb-8">
                üé• ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ó‡•à‡§≤‡§∞‡•Ä
              </h2>
              
              <Card className="p-12">
                <div className="text-center text-gray-500">
                  <Video className="w-16 h-16 mx-auto mb-4" />
                  <h3 className="text-xl font-semibold mb-2">‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ú‡§≤‡•ç‡§¶ ‡§Ü ‡§∞‡§π‡•á ‡§π‡•à‡§Ç</h3>
                  <p>‡§π‡§Æ‡§æ‡§∞‡•á ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ‡•ã‡§Ç ‡§î‡§∞ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ú‡§≤‡•ç‡§¶ ‡§π‡•Ä ‡§Ø‡§π‡§æ‡§Å ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•ã‡§Ç‡§ó‡•á‡•§</p>
                </div>
              </Card>
            </div>
          </div>
        </section>
      )}

      {/* Image Modal */}
      {selectedImage && (
        <div 
          className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4"
          onClick={() => setSelectedImage(null)}
        >
          <div className="max-w-4xl max-h-full">
            <img
              src={selectedImage}
              alt="Gallery Image"
              className="max-w-full max-h-full object-contain"
            />
          </div>
          <Button
            variant="secondary"
            className="absolute top-4 right-4"
            onClick={() => setSelectedImage(null)}
          >
            ‚úï
          </Button>
        </div>
      )}

      {/* Call to Action */}
      <section className="py-16 bg-gradient-to-r from-green-600 to-blue-600 text-white">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-3xl md:text-4xl font-bold mb-6">
              ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§≠‡§æ‡§ó ‡§≤‡•á‡§Ç
            </h2>
            <p className="text-xl mb-8">
              ‡§Ü‡§ó‡§æ‡§Æ‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ‡•ã‡§Ç ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§Æ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á ‡§∞‡§π‡•á‡§Ç
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" variant="secondary">
                ‡§µ‡•ç‡§π‡§æ‡§ü‡•ç‡§∏‡§ê‡§™ ‡§ó‡•ç‡§∞‡•Å‡§™ ‡§ú‡•ç‡§µ‡§æ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç
              </Button>
              <Button size="lg" variant="secondary">
                ‡§´‡•á‡§∏‡§¨‡•Å‡§ï ‡§™‡•á‡§ú ‡§´‡•â‡§≤‡•ã ‡§ï‡§∞‡•á‡§Ç
              </Button>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}